%p
  =error_messages_for 'medium', :object => form

.media_detailed{ :id => "medium_#{form.id}" }
  =spiffy_top

  .mediumfg
    .medium_preview_form.left
      =render :partial => "media/#{form.template_path}/preview", :object => form

    .media_info_form.left
      -# Hinweis: Die Parameter sind hier deshalb im Kontext eines media_sets, weil das Formular für ein Medium
      -# generell auch als Teilformular eines MediaSets dienen muss.
      -fields_for("media_set[media_attributes][]", form) do |media_form|
        .edit_media_name
          Name
          %br
          =media_form.text_field :name, :class => 'media_name, mandatory'

        .edit_media_desc
          Beschreibung
          %br
          =media_form.text_area :desc, :class => 'media_desc'

        .edit_media_tags
          %p
            Schlagworte
            %span.explanation zusätzlich für dieses Medium
            %br
            - m_dom_id = dom_id(form)
            =media_form.text_field :tag_names, :class => 'media_tags', :id => m_dom_id, :onfocus => "open_tag_list('#{m_dom_id}');", :autocomplete => 'off'
          %div{:id => "tag_link_list_#{m_dom_id}", :style => 'display: none', :class => 'slide_in'}
            = close_tag_link_list(m_dom_id)
            Fach-Schlagworte
            %br
            = subjects_link_list(m_dom_id)
            %br
            Top-Schlagworte
            %br
            = top_tags_link_list(m_dom_id, {:limit => 30})
            %br
            Meine Top-Schlagworte
            %br
            = my_top_tags_link_list(m_dom_id, {:limit => 30})

        .edit_media_source
          Quelle/Copyright
          %br
          =media_form.select :source, MEDIUM_SOURCES, :include_blank => true

        -if current_user.is_owner_of?(form)
          - group_permission_radio_button_id = "group_permission_radio_button_#{form.id}"
          - groups_select_id = "groups_select_#{form.id}"

          .edit_media_viewers
            %fieldset
              %legend
                Sichtbar für
              = media_form.radio_button('permission_type', 'owner', :onclick => "$('#{groups_select_id}').hide()")
              Nur Besitzer
              &nbsp;
              &nbsp;
              = media_form.radio_button('permission_type', 'all', :onclick => "$('#{groups_select_id}').hide()")
              Alle
              &nbsp;
              &nbsp;
              = media_form.radio_button('permission_type', 'public', :onclick => "$('#{groups_select_id}').hide()")
              Alle & Öffentlich
              &nbsp;
              &nbsp;
              = media_form.radio_button('permission_type', 'groups', :id => group_permission_radio_button_id, :onclick => "$('#{groups_select_id}').show()")
              Diese Gruppen:
              =# media_form.select :read_permitted_user_group_ids, options_for_user_group_select, {}, {:multiple => true, :style => 'vertical-align:top'}
              -# Katastrophe! Rails hat den Bug, dass bei :multiple => true nur der stinknormale select_tag helper korrekte HTML-Namen vergibt. Die anderen Form-Helpers vergessen das [] anzuhängen
              - hidden = form.permission_type != 'groups'
              -# :onchange => "$('#{group_permission_radio_button_id}').checked = true"
              = select_tag("media_set[media_attributes][#{form.id}][read_permitted_user_group_ids][]", options_for_select(options_for_user_group_select, form.read_permitted_user_group_ids), :multiple => true, :style => "vertical-align:top;#{'display:none' if hidden}", :size => 6, :id => groups_select_id)
              
        
        - if FEATURE_METADATA
          .edit_media_meta_data
            - meta_data_div_id = "meta_data_div_#{form.id}"
            = link_to_function('Meta-Daten ein-/ausblenden', "$('#{meta_data_div_id}').toggle()")
            %div{:id => meta_data_div_id, :style => 'display:none'}
              Meta-Daten
              = media_form.text_area :meta_data_yaml, :id => meta_data_div_id, :style => 'height:300px'
    .clear

  =spiffy_bottom