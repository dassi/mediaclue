#left
  %h1 
    = @media_set.caption
    = "ordnen" if @enable_ordering 

  -if @enable_ordering
    %p
      Ordnen Sie die Medien durch Drag & Drop.
      =button_to 'Medien ordnen beenden', media_set_path(@media_set), :method => :get
  -elsif @media_set.defined? or @media_set.defining?
    %table.properties
      %tr
        %th.label Eigenschaft
        %th.value Wert
      - label_and_values = []
      - label_and_values << ['Schlagworte', formatted_tag_list(@media_set)]
      - label_and_values << ['Besitzer', @media_set.owner_name || no_data_text]
      - label_and_values << ['Erstellt am', @media_set.created_at.to_formatted_s(:german)]
      - label_and_values << ['Zuletzt bearbeitet am', @media_set.updated_at.to_formatted_s(:german)]
      - label_and_values << ['Persönliche Einsortierung', @media_set.sort_path.present? ? @media_set.sort_path : no_data_text]
      - label_and_values << ['Bewertung', (image_tag('star.png') * @media_set.rating) + (image_tag('bullet_gray.png') * (3 - @media_set.rating)) ]
      - for label, value in label_and_values
        %tr
          %td.label= label
          %td.value= value

    %h2 Beschreibung
    .media_set_desc= formatted_desc(@media_set)
  
  - if not @media.empty?
    %p= will_paginate @media if @paginate
    #media_list.media
      - form_tag(nil, :id => 'multi_action_form') do
        = render :partial => 'media/list_item', :locals => {:member_media_set => @media_set, :composing_media_set => @composing_media_set, :size => :small}, :collection => @media
    =sortable_element 'media_list', :tag => 'div', :url => update_positions_media_set_path(@media_set), :scroll => true if @enable_ordering
    %div{:style => 'float:right'}
      = link_to_function 'Selektion aufheben' do |page|
        - page.select('input[type=checkbox][name="selected_media[]"]').each do |item|
          - item.checked = false
    .clear
    %p= will_paginate @media if @paginate
  - else
    %p Keine Medien

  - if @enable_ordering
    = button_to 'Medien ordnen beenden', media_set_path(@media_set), :method => :get


#right
  %h3.first Bearbeitung
  %ul
    -if current_user.can_edit?(@media_set)
      -if @media_set.defined? or @media_set.defining?
        %li= link_to 'Kollektion bearbeiten', edit_media_set_path(@media_set) 
        %li= link_to 'Kollektion löschen', media_set_path(@media_set), :confirm => 'Sind Sie sicher? Die Kollektion wird gelöscht. Die enthaltenen Medien werden jedoch nicht gelöscht.', :method => :delete
      -elsif @media_set.search_result?
        %li= link_to 'Suchresultat als Kollektion speichern', edit_media_set_path(@media_set)
      -elsif @media_set.composing? or @media_set.uploading?
        %li= link_to 'Als neue Kollektion speichern', edit_media_set_path(@media_set)

      -if not @enable_ordering
        %li= link_to 'Medien ordnen', order_media_set_path(@media_set)

      -if @media_set.defined? or @media_set.defining?
        %li= link_to 'Weitere Medien in diese Kollektion hochladen', uploader_media_set_path(@media_set) 

  %h3 Download
  %ul
    %li= link_to 'Alle Medien als ZIP-File herunterladen', media_set_path(@media_set, :format => :zip)
    %li= link_to 'Bilder als PDF-Diashow herunterladen', media_set_path(@media_set, :format => :pdf)

  %h3 Ansicht
  %ul
    %li= per_page_select(@media_set, @per_page)
    %li= link_to 'Zeige Bilder in Ansicht "Leuchtpult klein"', media_set_path(@media_set, :style => 'lightbox', :size => 'small')
    %li= link_to 'Zeige Bilder in Ansicht "Leuchtpult gross"', media_set_path(@media_set, :style => 'lightbox', :size => 'big')
    -# %li= link_to 'Zeige Bilder als Diashow', media_set_path(@media_set, :style => 'slideshow')

  %h3 Selektierte oder alle Medien...
  %ul
    %li= link_to_remote('...als Diashow anzeigen', :url => media_set_path(@media_set, :style => 'slideshow'), :submit => 'multi_action_form', :method => :get)
    %li= link_to_remote('...aus dieser Kollektion entfernen', :url => remove_media_media_set_path(@media_set), :submit => 'multi_action_form', :confirm => "Selektierte Medien wirklich aus dieser Kollektion entfernen (Medien selbst werden nicht gelöscht)?")
    -#Braucht einen Auswahl-Mechanismus: %li= link_to_remote('...in andere Kollektion verschieben', :url => move_media_media_set_path(@media_set), :submit => 'multi_action_form', :confirm => "Selektierte Medien wirklich aus dieser Kollektion entfernen (Medien selbst werden nicht gelöscht)?")
    -#ditto: %li= link_to_remote('...zu anderer Kollektion hinzufügen', :url => add_media_media_set_path(@media_set), :submit => 'multi_action_form', :confirm => "Selektierte Medien wirklich aus dieser Kollektion entfernen (Medien selbst werden nicht gelöscht)?")

    - if @composing_media_set and !@media_set.composing?
      %li= link_to_remote('...in Zwischenablage kopieren', :url => add_media_media_set_path(@media_set, :target_media_set_id => @composing_media_set), :submit => 'multi_action_form')
      %li= link_to_remote('...in Zwischenablage verschieben', :url => move_media_media_set_path(@media_set, :target_media_set_id => @composing_media_set), :submit => 'multi_action_form', :confirm => 'Die Medien werden aus der Kollektion entfernt. In die Zwischenablage verschieben?')

  - if @composing_media_set and !@media_set.composing?
    %h3 Zwischenablage
    %ul
      %li= link_to 'Als neue Kollektion speichern', edit_media_set_path(@composing_media_set)
      %li= link_to 'Zur aktuellen Kollektion hinzufügen', merge_media_set_path(@media_set, :source_media_set_id => @composing_media_set)
      %li= link_to_remote('Zwischenablage leeren', :url => remove_all_media_media_set_path(@composing_media_set, :div_prefix => 'collection'), :method => :post, :confirm => 'Zwischenablage leeren?')
    =render :partial => 'media_sets/collection_box', :object => @composing_media_set if @composing_media_set


